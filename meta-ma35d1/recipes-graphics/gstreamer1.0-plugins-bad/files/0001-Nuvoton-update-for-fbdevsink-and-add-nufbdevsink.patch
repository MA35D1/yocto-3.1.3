From 6ccfdcdc8085d4670d7d1bf74fa6d9cfc00b1c8f Mon Sep 17 00:00:00 2001
From: ms10 <ychuang3@nuvoton.com>
Date: Mon, 28 Jun 2021 08:42:23 +0000
Subject: [PATCH] Nuvoton update for fbdevsink and add nufbdevsink.

---
 config.h.in                  |    5 +-
 configure                    |    5 +
 configure.ac                 |    4 +-
 m4/introspection.m4          |   96 +++
 meson_options.txt            |    1 +
 sys/Makefile.am              |   10 +-
 sys/Makefile.in              |    6 +-
 sys/fbdev/gstfbdevsink.c     |   10 +-
 sys/meson.build              |    1 +
 sys/nufbdev/Makefile.am      |   14 +
 sys/nufbdev/Makefile.in      | 1091 ++++++++++++++++++++++++++++++++++
 sys/nufbdev/gstnufbdevsink.c |  608 +++++++++++++++++++
 sys/nufbdev/gstnufbdevsink.h |  106 ++++
 sys/nufbdev/meson.build      |   24 +
 14 files changed, 1974 insertions(+), 7 deletions(-)
 create mode 100644 m4/introspection.m4
 create mode 100644 sys/nufbdev/Makefile.am
 create mode 100644 sys/nufbdev/Makefile.in
 create mode 100644 sys/nufbdev/gstnufbdevsink.c
 create mode 100644 sys/nufbdev/gstnufbdevsink.h
 create mode 100644 sys/nufbdev/meson.build

diff --git a/config.h.in b/config.h.in
index ce4b064..e208804 100644
--- a/config.h.in
+++ b/config.h.in
@@ -227,7 +227,10 @@
 #undef HAVE_FAAD
 
 /* Define to enable linux framebuffer (used by fbdevsink). */
-#undef HAVE_FBDEV
+#define HAVE_FBDEV
+
+/* Define to enable Nuvoton VC8000 PP + linux framebuffer (used by nufbdevsink). */
+#define HAVE_NUFBDEV
 
 /* Define to 1 if you have the <fcntl.h> header file. */
 #undef HAVE_FCNTL_H
diff --git a/configure b/configure
index 1619f9e..cfc6742 100755
--- a/configure
+++ b/configure
@@ -873,6 +873,8 @@ FDK_AAC_LIBS
 FDK_AAC_CFLAGS
 USE_FBDEV_FALSE
 USE_FBDEV_TRUE
+USE_NUFBDEV_FALSE
+USE_NUFBDEV_TRUE
 USE_FAAD_FALSE
 USE_FAAD_TRUE
 FAAD_LIBS
@@ -1695,6 +1697,7 @@ enable_resindvd
 enable_faac
 enable_faad
 enable_fbdev
+enable_nufbdev
 enable_fdk_aac
 enable_flite
 enable_gsm
@@ -2730,6 +2733,7 @@ Optional Features:
   --disable-faac               disable AAC encoder plug-in: faac
   --disable-faad               disable FAAD2 AAC decoder plug-in: faad
   --disable-fbdev              disable linux framebuffer: fbdevsink
+  --disable-nufbdev            disable Nuvoton VC8000 PP + linux framebuffer: nufbdevsink
   --disable-fdk_aac            disable fdkaac plugin: fdkaac
   --disable-flite              disable Flite plugin: flite
   --disable-gsm                disable GSM library: gsmenc gsmdec
@@ -95106,6 +95110,7 @@ do
     "sys/dshowvideosink/Makefile") CONFIG_FILES="$CONFIG_FILES sys/dshowvideosink/Makefile" ;;
     "sys/dvb/Makefile") CONFIG_FILES="$CONFIG_FILES sys/dvb/Makefile" ;;
     "sys/fbdev/Makefile") CONFIG_FILES="$CONFIG_FILES sys/fbdev/Makefile" ;;
+    "sys/nufbdev/Makefile") CONFIG_FILES="$CONFIG_FILES sys/nufbdev/Makefile" ;;
     "sys/ipcpipeline/Makefile") CONFIG_FILES="$CONFIG_FILES sys/ipcpipeline/Makefile" ;;
     "sys/kms/Makefile") CONFIG_FILES="$CONFIG_FILES sys/kms/Makefile" ;;
     "sys/msdk/Makefile") CONFIG_FILES="$CONFIG_FILES sys/msdk/Makefile" ;;
diff --git a/configure.ac b/configure.ac
index 5712e73..a98c8d5 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2351,7 +2351,8 @@ AM_CONDITIONAL(USE_EXIF, false)
 AM_CONDITIONAL(USE_RESINDVD, false)
 AM_CONDITIONAL(USE_FAAC, false)
 AM_CONDITIONAL(USE_FAAD, false)
-AM_CONDITIONAL(USE_FBDEV, false)
+AM_CONDITIONAL(USE_FBDEV, true)
+AM_CONDITIONAL(USE_NUFBDEV, true)
 AM_CONDITIONAL(USE_FDK_AAC, false)
 AM_CONDITIONAL(USE_FLITE, false)
 AM_CONDITIONAL(USE_FLUIDSYNTH, false)
@@ -2602,6 +2603,7 @@ sys/dshowsrcwrapper/Makefile
 sys/dshowvideosink/Makefile
 sys/dvb/Makefile
 sys/fbdev/Makefile
+sys/nufbdev/Makefile
 sys/ipcpipeline/Makefile
 sys/kms/Makefile
 sys/msdk/Makefile
diff --git a/m4/introspection.m4 b/m4/introspection.m4
new file mode 100644
index 0000000..b562266
--- /dev/null
+++ b/m4/introspection.m4
@@ -0,0 +1,96 @@
+dnl -*- mode: autoconf -*-
+dnl Copyright 2009 Johan Dahlin
+dnl
+dnl This file is free software; the author(s) gives unlimited
+dnl permission to copy and/or distribute it, with or without
+dnl modifications, as long as this notice is preserved.
+dnl
+
+# serial 1
+
+m4_define([_GOBJECT_INTROSPECTION_CHECK_INTERNAL],
+[
+    AC_BEFORE([AC_PROG_LIBTOOL],[$0])dnl setup libtool first
+    AC_BEFORE([AM_PROG_LIBTOOL],[$0])dnl setup libtool first
+    AC_BEFORE([LT_INIT],[$0])dnl setup libtool first
+
+    dnl enable/disable introspection
+    m4_if([$2], [require],
+    [dnl
+        enable_introspection=yes
+    ],[dnl
+        AC_ARG_ENABLE(introspection,
+                  AS_HELP_STRING([--enable-introspection[=@<:@no/auto/yes@:>@]],
+                                 [Enable introspection for this build]),, 
+                                 [enable_introspection=auto])
+    ])dnl
+
+    AC_MSG_CHECKING([for gobject-introspection])
+
+    dnl presence/version checking
+    AS_CASE([$enable_introspection],
+    [no], [dnl
+        found_introspection="no (disabled, use --enable-introspection to enable)"
+    ],dnl
+    [yes],[dnl
+        PKG_CHECK_EXISTS([gobject-introspection-1.0],,
+                         AC_MSG_ERROR([gobject-introspection-1.0 is not installed]))
+        PKG_CHECK_EXISTS([gobject-introspection-1.0 >= $1],
+                         found_introspection=yes,
+                         AC_MSG_ERROR([You need to have gobject-introspection >= $1 installed to build AC_PACKAGE_NAME]))
+    ],dnl
+    [auto],[dnl
+        PKG_CHECK_EXISTS([gobject-introspection-1.0 >= $1], found_introspection=yes, found_introspection=no)
+	dnl Canonicalize enable_introspection
+	enable_introspection=$found_introspection
+    ],dnl
+    [dnl	
+        AC_MSG_ERROR([invalid argument passed to --enable-introspection, should be one of @<:@no/auto/yes@:>@])
+    ])dnl
+
+    AC_MSG_RESULT([$found_introspection])
+
+    INTROSPECTION_SCANNER=
+    INTROSPECTION_COMPILER=
+    INTROSPECTION_GENERATE=
+    INTROSPECTION_GIRDIR=
+    INTROSPECTION_TYPELIBDIR=
+    if test "x$found_introspection" = "xyes"; then
+       INTROSPECTION_SCANNER=$PKG_CONFIG_SYSROOT_DIR`$PKG_CONFIG --variable=g_ir_scanner gobject-introspection-1.0`
+       INTROSPECTION_COMPILER=$PKG_CONFIG_SYSROOT_DIR`$PKG_CONFIG --variable=g_ir_compiler gobject-introspection-1.0`
+       INTROSPECTION_GENERATE=$PKG_CONFIG_SYSROOT_DIR`$PKG_CONFIG --variable=g_ir_generate gobject-introspection-1.0`
+       INTROSPECTION_GIRDIR=`$PKG_CONFIG --variable=girdir gobject-introspection-1.0`
+       INTROSPECTION_TYPELIBDIR="$($PKG_CONFIG --variable=typelibdir gobject-introspection-1.0)"
+       INTROSPECTION_CFLAGS=`$PKG_CONFIG --cflags gobject-introspection-1.0`
+       INTROSPECTION_LIBS=`$PKG_CONFIG --libs gobject-introspection-1.0`
+       INTROSPECTION_MAKEFILE=$PKG_CONFIG_SYSROOT_DIR`$PKG_CONFIG --variable=datadir gobject-introspection-1.0`/gobject-introspection-1.0/Makefile.introspection
+    fi
+    AC_SUBST(INTROSPECTION_SCANNER)
+    AC_SUBST(INTROSPECTION_COMPILER)
+    AC_SUBST(INTROSPECTION_GENERATE)
+    AC_SUBST(INTROSPECTION_GIRDIR)
+    AC_SUBST(INTROSPECTION_TYPELIBDIR)
+    AC_SUBST(INTROSPECTION_CFLAGS)
+    AC_SUBST(INTROSPECTION_LIBS)
+    AC_SUBST(INTROSPECTION_MAKEFILE)
+
+    AM_CONDITIONAL(HAVE_INTROSPECTION, test "x$found_introspection" = "xyes")
+])
+
+
+dnl Usage:
+dnl   GOBJECT_INTROSPECTION_CHECK([minimum-g-i-version])
+
+AC_DEFUN([GOBJECT_INTROSPECTION_CHECK],
+[
+  _GOBJECT_INTROSPECTION_CHECK_INTERNAL([$1])
+])
+
+dnl Usage:
+dnl   GOBJECT_INTROSPECTION_REQUIRE([minimum-g-i-version])
+
+
+AC_DEFUN([GOBJECT_INTROSPECTION_REQUIRE],
+[
+  _GOBJECT_INTROSPECTION_CHECK_INTERNAL([$1], [require])
+])
diff --git a/meson_options.txt b/meson_options.txt
index 3a9aa93..c5ba956 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -95,6 +95,7 @@ option('dvb', type : 'feature', value : 'auto', description : 'DVB video bin and
 option('faac', type : 'feature', value : 'auto', description : 'Free AAC audio encoder plugin')
 option('faad', type : 'feature', value : 'auto', description : 'Free AAC audio decoder plugin')
 option('fbdev', type : 'feature', value : 'auto', description : 'Framebuffer video sink plugin')
+option('nufbdev', type : 'feature', value : 'auto', description : 'Nuvoton VC8000 PP + Framebuffer video sink plugin')
 option('fdkaac', type : 'feature', value : 'auto', description : 'Fraunhofer AAC audio codec plugin')
 option('flite', type : 'feature', value : 'auto', description : 'Flite speech synthesizer source plugin')
 option('fluidsynth', type : 'feature', value : 'auto', description : 'Fluidsynth MIDI decoder plugin')
diff --git a/sys/Makefile.am b/sys/Makefile.am
index 42523b4..263c8e5 100644
--- a/sys/Makefile.am
+++ b/sys/Makefile.am
@@ -52,6 +52,12 @@ else
 FBDEV_DIR=
 endif
 
+if USE_NUFBDEV
+NUFBDEV_DIR=nufbdev
+else
+NUFBDEV_DIR=
+endif
+
 if USE_IPCPIPELINE
 IPCPIPELINE_DIR=ipcpipeline
 else
@@ -124,9 +130,9 @@ else
 MSDK_DIR=
 endif
 
-SUBDIRS = $(ANDROID_MEDIA_DIR) $(APPLE_MEDIA_DIR) $(BLUEZ_DIR) $(D3DVIDEOSINK_DIR) $(DECKLINK_DIR) $(DIRECTSOUND_DIR) $(WINKS_DIR) $(DVB_DIR) $(FBDEV_DIR) $(IPCPIPELINE_DIR) $(KMS_DIR) $(OPENSLES_DIR) $(SHM_DIR) $(UVCH264_DIR) $(VDPAU_DIR) $(WININET_DIR) $(WINSCREENCAP_DIR) $(WASAPI_DIR) $(NVDEC_DIR) $(NVENC_DIR) $(TINYALSA_DIR) $(MSDK_DIR)
+SUBDIRS = $(ANDROID_MEDIA_DIR) $(APPLE_MEDIA_DIR) $(BLUEZ_DIR) $(D3DVIDEOSINK_DIR) $(DECKLINK_DIR) $(DIRECTSOUND_DIR) $(WINKS_DIR) $(DVB_DIR) $(FBDEV_DIR) $(NUFBDEV_DIR) $(IPCPIPELINE_DIR) $(KMS_DIR) $(OPENSLES_DIR) $(SHM_DIR) $(UVCH264_DIR) $(VDPAU_DIR) $(WININET_DIR) $(WINSCREENCAP_DIR) $(WASAPI_DIR) $(NVDEC_DIR) $(NVENC_DIR) $(TINYALSA_DIR) $(MSDK_DIR)
 
-DIST_SUBDIRS = androidmedia applemedia bluez d3dvideosink decklink directsound dvb fbdev ipcpipeline kms dshowdecwrapper dshowsrcwrapper dshowvideosink \
+DIST_SUBDIRS = androidmedia applemedia bluez d3dvideosink decklink directsound dvb fbdev nufbdev ipcpipeline kms dshowdecwrapper dshowsrcwrapper dshowvideosink \
 		opensles shm uvch264 vdpau wasapi winks winscreencap \
 		nvdec nvenc tinyalsa msdk
 
diff --git a/sys/Makefile.in b/sys/Makefile.in
index 2661f5d..30be4dd 100644
--- a/sys/Makefile.in
+++ b/sys/Makefile.in
@@ -732,6 +732,8 @@ wayland_scanner = @wayland_scanner@
 @USE_DIRECTSOUND_TRUE@DIRECTSOUND_DIR = directsound
 @USE_FBDEV_FALSE@FBDEV_DIR = 
 @USE_FBDEV_TRUE@FBDEV_DIR = fbdev
+@USE_NUFBDEV_FALSE@NUFBDEV_DIR = 
+@USE_NUFBDEV_TRUE@NUFBDEV_DIR = nufbdev
 @USE_IPCPIPELINE_FALSE@IPCPIPELINE_DIR = 
 @USE_IPCPIPELINE_TRUE@IPCPIPELINE_DIR = ipcpipeline
 @USE_KMS_FALSE@KMS_DIR = 
@@ -756,8 +758,8 @@ wayland_scanner = @wayland_scanner@
 @USE_TINYALSA_TRUE@TINYALSA_DIR = tinyalsa
 @USE_MSDK_FALSE@MSDK_DIR = 
 @USE_MSDK_TRUE@MSDK_DIR = msdk
-SUBDIRS = $(ANDROID_MEDIA_DIR) $(APPLE_MEDIA_DIR) $(BLUEZ_DIR) $(D3DVIDEOSINK_DIR) $(DECKLINK_DIR) $(DIRECTSOUND_DIR) $(WINKS_DIR) $(DVB_DIR) $(FBDEV_DIR) $(IPCPIPELINE_DIR) $(KMS_DIR) $(OPENSLES_DIR) $(SHM_DIR) $(UVCH264_DIR) $(VDPAU_DIR) $(WININET_DIR) $(WINSCREENCAP_DIR) $(WASAPI_DIR) $(NVDEC_DIR) $(NVENC_DIR) $(TINYALSA_DIR) $(MSDK_DIR)
-DIST_SUBDIRS = androidmedia applemedia bluez d3dvideosink decklink directsound dvb fbdev ipcpipeline kms dshowdecwrapper dshowsrcwrapper dshowvideosink \
+SUBDIRS = $(ANDROID_MEDIA_DIR) $(APPLE_MEDIA_DIR) $(BLUEZ_DIR) $(D3DVIDEOSINK_DIR) $(DECKLINK_DIR) $(DIRECTSOUND_DIR) $(WINKS_DIR) $(DVB_DIR) $(FBDEV_DIR) $(NUFBDEV_DIR) $(IPCPIPELINE_DIR) $(KMS_DIR) $(OPENSLES_DIR) $(SHM_DIR) $(UVCH264_DIR) $(VDPAU_DIR) $(WININET_DIR) $(WINSCREENCAP_DIR) $(WASAPI_DIR) $(NVDEC_DIR) $(NVENC_DIR) $(TINYALSA_DIR) $(MSDK_DIR)
+DIST_SUBDIRS = androidmedia applemedia bluez d3dvideosink decklink directsound dvb fbdev nufbdev ipcpipeline kms dshowdecwrapper dshowsrcwrapper dshowvideosink \
 		opensles shm uvch264 vdpau wasapi winks winscreencap \
 		nvdec nvenc tinyalsa msdk
 
diff --git a/sys/fbdev/gstfbdevsink.c b/sys/fbdev/gstfbdevsink.c
index 166c543..ff29708 100644
--- a/sys/fbdev/gstfbdevsink.c
+++ b/sys/fbdev/gstfbdevsink.c
@@ -261,10 +261,15 @@ gst_fbdevsink_show_frame (GstVideoSink * videosink, GstBuffer * buf)
 {
 
   GstFBDEVSink *fbdevsink;
+  struct fb_var_screeninfo *var;
   GstMapInfo map;
+  unsigned char *fb_addr;
   int i;
 
   fbdevsink = GST_FBDEVSINK (videosink);
+  var = &fbdevsink->varinfo;
+  
+  fb_addr = (char *)(fbdevsink->framebuffer + var->yoffset * var->xres * var->bits_per_pixel / 8);
 
   /* optimization could remove this memcpy by allocating the buffer
      in framebuffer memory, but would only work when xres matches
@@ -272,8 +277,9 @@ gst_fbdevsink_show_frame (GstVideoSink * videosink, GstBuffer * buf)
   if (!gst_buffer_map (buf, &map, GST_MAP_READ))
     return GST_FLOW_ERROR;
 
+printf("Show\n");
   for (i = 0; i < fbdevsink->lines; i++) {
-    memcpy (fbdevsink->framebuffer
+    memcpy (fb_addr
         + (i + fbdevsink->cy) * fbdevsink->fixinfo.line_length
         + fbdevsink->cx * fbdevsink->bytespp,
         map.data + i * fbdevsink->width * fbdevsink->bytespp,
@@ -315,6 +321,8 @@ gst_fbdevsink_start (GstBaseSink * bsink)
   if (fbdevsink->framebuffer == MAP_FAILED)
     return FALSE;
 
+  ioctl(fbdevsink->fd, FBIOPAN_DISPLAY, &fbdevsink->varinfo);
+
   return TRUE;
 }
 
diff --git a/sys/meson.build b/sys/meson.build
index ba717da..d67d57b 100644
--- a/sys/meson.build
+++ b/sys/meson.build
@@ -9,6 +9,7 @@ subdir('directsound')
 #subdir('dshowvideosink')
 subdir('dvb')
 subdir('fbdev')
+subdir('nufbdev')
 subdir('ipcpipeline')
 subdir('kms')
 subdir('msdk')
diff --git a/sys/nufbdev/Makefile.am b/sys/nufbdev/Makefile.am
new file mode 100644
index 0000000..f2e4bc4
--- /dev/null
+++ b/sys/nufbdev/Makefile.am
@@ -0,0 +1,14 @@
+plugin_LTLIBRARIES = libgstnufbdevsink.la
+
+libgstnufbdevsink_la_SOURCES = gstnufbdevsink.c
+libgstnufbdevsink_la_CFLAGS = \
+	$(GST_PLUGINS_BASE_CFLAGS) \
+	$(GST_CFLAGS) \
+	$(LIBNUFBDEV_CFLAGS)
+libgstnufbdevsink_la_LIBADD = \
+	$(GST_PLUGINS_BASE_LIBS) -lgstvideo-$(GST_API_VERSION) \
+	$(GST_BASE_LIBS) \
+	$(LIBNUFBDEV_LIBS)
+libgstnufbdevsink_la_LDFLAGS = $(GST_PLUGIN_LDFLAGS)
+
+noinst_HEADERS = gstnufbdevsink.h
diff --git a/sys/nufbdev/Makefile.in b/sys/nufbdev/Makefile.in
new file mode 100644
index 0000000..0da09c5
--- /dev/null
+++ b/sys/nufbdev/Makefile.in
@@ -0,0 +1,1091 @@
+# Makefile.in generated by automake 1.16.2 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994-2020 Free Software Foundation, Inc.
+
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+
+VPATH = @srcdir@
+am__is_gnu_make = { \
+  if test -z '$(MAKELEVEL)'; then \
+    false; \
+  elif test -n '$(MAKE_HOST)'; then \
+    true; \
+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
+    true; \
+  else \
+    false; \
+  fi; \
+}
+am__make_running_with_option = \
+  case $${target_option-} in \
+      ?) ;; \
+      *) echo "am__make_running_with_option: internal error: invalid" \
+              "target option '$${target_option-}' specified" >&2; \
+         exit 1;; \
+  esac; \
+  has_opt=no; \
+  sane_makeflags=$$MAKEFLAGS; \
+  if $(am__is_gnu_make); then \
+    sane_makeflags=$$MFLAGS; \
+  else \
+    case $$MAKEFLAGS in \
+      *\\[\ \	]*) \
+        bs=\\; \
+        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
+          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
+    esac; \
+  fi; \
+  skip_next=no; \
+  strip_trailopt () \
+  { \
+    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
+  }; \
+  for flg in $$sane_makeflags; do \
+    test $$skip_next = yes && { skip_next=no; continue; }; \
+    case $$flg in \
+      *=*|--*) continue;; \
+        -*I) strip_trailopt 'I'; skip_next=yes;; \
+      -*I?*) strip_trailopt 'I';; \
+        -*O) strip_trailopt 'O'; skip_next=yes;; \
+      -*O?*) strip_trailopt 'O';; \
+        -*l) strip_trailopt 'l'; skip_next=yes;; \
+      -*l?*) strip_trailopt 'l';; \
+      -[dEDm]) skip_next=yes;; \
+      -[JT]) skip_next=yes;; \
+    esac; \
+    case $$flg in \
+      *$$target_option*) has_opt=yes; break;; \
+    esac; \
+  done; \
+  test $$has_opt = yes
+am__make_dryrun = (target_option=n; $(am__make_running_with_option))
+am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+target_triplet = @target@
+subdir = sys/nufbdev
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/common/m4/as-ac-expand.m4 \
+	$(top_srcdir)/common/m4/as-auto-alt.m4 \
+	$(top_srcdir)/common/m4/as-compiler-flag.m4 \
+	$(top_srcdir)/common/m4/as-libtool.m4 \
+	$(top_srcdir)/common/m4/as-version.m4 \
+	$(top_srcdir)/common/m4/ax_create_stdint_h.m4 \
+	$(top_srcdir)/common/m4/ax_pthread.m4 \
+	$(top_srcdir)/common/m4/gst-arch.m4 \
+	$(top_srcdir)/common/m4/gst-args.m4 \
+	$(top_srcdir)/common/m4/gst-check.m4 \
+	$(top_srcdir)/common/m4/gst-default.m4 \
+	$(top_srcdir)/common/m4/gst-dowhile.m4 \
+	$(top_srcdir)/common/m4/gst-error.m4 \
+	$(top_srcdir)/common/m4/gst-feature.m4 \
+	$(top_srcdir)/common/m4/gst-gettext.m4 \
+	$(top_srcdir)/common/m4/gst-glib2.m4 \
+	$(top_srcdir)/common/m4/gst-package-release-datetime.m4 \
+	$(top_srcdir)/common/m4/gst-platform.m4 \
+	$(top_srcdir)/common/m4/gst-plugin-docs.m4 \
+	$(top_srcdir)/common/m4/gst-plugindir.m4 \
+	$(top_srcdir)/common/m4/gst.m4 \
+	$(top_srcdir)/common/m4/gtk-doc.m4 \
+	$(top_srcdir)/common/m4/introspection.m4 \
+	$(top_srcdir)/common/m4/orc.m4 $(top_srcdir)/common/m4/pkg.m4 \
+	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
+	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
+	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
+	$(top_srcdir)/m4/libgcrypt.m4 $(top_srcdir)/m4/libtool.m4 \
+	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
+	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
+	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
+	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
+	$(am__DIST_COMMON)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__uninstall_files_from_dir = { \
+  test -z "$$files" \
+    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
+    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
+         $(am__cd) "$$dir" && rm -f $$files; }; \
+  }
+am__installdirs = "$(DESTDIR)$(plugindir)"
+LTLIBRARIES = $(plugin_LTLIBRARIES)
+am__DEPENDENCIES_1 =
+libgstnufbdevsink_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
+	$(am__DEPENDENCIES_1)
+am_libgstnufbdevsink_la_OBJECTS = libgstnufbdevsink_la-gstnufbdevsink.lo
+libgstnufbdevsink_la_OBJECTS = $(am_libgstnufbdevsink_la_OBJECTS)
+AM_V_lt = $(am__v_lt_@AM_V@)
+am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
+am__v_lt_0 = --silent
+am__v_lt_1 = 
+libgstnufbdevsink_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
+	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
+	$(libgstnufbdevsink_la_CFLAGS) $(CFLAGS) \
+	$(libgstnufbdevsink_la_LDFLAGS) $(LDFLAGS) -o $@
+AM_V_P = $(am__v_P_@AM_V@)
+am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
+am__v_P_0 = false
+am__v_P_1 = :
+AM_V_GEN = $(am__v_GEN_@AM_V@)
+am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
+am__v_GEN_0 = @echo "  GEN     " $@;
+am__v_GEN_1 = 
+AM_V_at = $(am__v_at_@AM_V@)
+am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
+am__v_at_0 = @
+am__v_at_1 = 
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
+depcomp = $(SHELL) $(top_srcdir)/depcomp
+am__maybe_remake_depfiles = depfiles
+am__depfiles_remade = ./$(DEPDIR)/libgstnufbdevsink_la-gstnufbdevsink.Plo
+am__mv = mv -f
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
+	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
+	$(AM_CFLAGS) $(CFLAGS)
+AM_V_CC = $(am__v_CC_@AM_V@)
+am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
+am__v_CC_0 = @echo "  CC      " $@;
+am__v_CC_1 = 
+CCLD = $(CC)
+LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(AM_LDFLAGS) $(LDFLAGS) -o $@
+AM_V_CCLD = $(am__v_CCLD_@AM_V@)
+am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
+am__v_CCLD_0 = @echo "  CCLD    " $@;
+am__v_CCLD_1 = 
+SOURCES = $(libgstnufbdevsink_la_SOURCES)
+DIST_SOURCES = $(libgstnufbdevsink_la_SOURCES)
+am__can_run_installinfo = \
+  case $$AM_UPDATE_INFO_DIR in \
+    n|no|NO) false;; \
+    *) (install-info --version) >/dev/null 2>&1;; \
+  esac
+HEADERS = $(noinst_HEADERS)
+am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
+# Read a list of newline-separated strings from the standard input,
+# and print each of them once, without duplicates.  Input order is
+# *not* preserved.
+am__uniquify_input = $(AWK) '\
+  BEGIN { nonempty = 0; } \
+  { items[$$0] = 1; nonempty = 1; } \
+  END { if (nonempty) { for (i in items) print i; }; } \
+'
+# Make sure the list of sources is unique.  This is necessary because,
+# e.g., the same source file might be shared among _SOURCES variables
+# for different programs/libraries.
+am__define_uniq_tagged_files = \
+  list='$(am__tagged_files)'; \
+  unique=`for i in $$list; do \
+    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+  done | $(am__uniquify_input)`
+ETAGS = etags
+CTAGS = ctags
+am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
+AMTAR = @AMTAR@
+AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
+AOM_CFLAGS = @AOM_CFLAGS@
+AOM_LIBS = @AOM_LIBS@
+AR = @AR@
+AS = @AS@
+ASSRENDER_CFLAGS = @ASSRENDER_CFLAGS@
+ASSRENDER_LIBS = @ASSRENDER_LIBS@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLUEZ5_CFLAGS = @BLUEZ5_CFLAGS@
+BLUEZ5_LIBS = @BLUEZ5_LIBS@
+BS2B_CFLAGS = @BS2B_CFLAGS@
+BS2B_LIBS = @BS2B_LIBS@
+BZ2_LIBS = @BZ2_LIBS@
+CC = @CC@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CHROMAPRINT_CFLAGS = @CHROMAPRINT_CFLAGS@
+CHROMAPRINT_LIBS = @CHROMAPRINT_LIBS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CUDA_CFLAGS = @CUDA_CFLAGS@
+CUDA_LIBS = @CUDA_LIBS@
+CURL_CFLAGS = @CURL_CFLAGS@
+CURL_LIBS = @CURL_LIBS@
+CXX = @CXX@
+CXXCPP = @CXXCPP@
+CXXDEPMODE = @CXXDEPMODE@
+CXXFLAGS = @CXXFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DECKLINK_CXXFLAGS = @DECKLINK_CXXFLAGS@
+DECKLINK_LIBS = @DECKLINK_LIBS@
+DEFAULT_AUDIOSINK = @DEFAULT_AUDIOSINK@
+DEFAULT_AUDIOSRC = @DEFAULT_AUDIOSRC@
+DEFAULT_VIDEOSINK = @DEFAULT_VIDEOSINK@
+DEFAULT_VIDEOSRC = @DEFAULT_VIDEOSRC@
+DEFAULT_VISUALIZER = @DEFAULT_VISUALIZER@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DEPRECATED_CFLAGS = @DEPRECATED_CFLAGS@
+DIRECT3D_LIBS = @DIRECT3D_LIBS@
+DIRECTFB_CFLAGS = @DIRECTFB_CFLAGS@
+DIRECTFB_LIBS = @DIRECTFB_LIBS@
+DIRECTSOUND_LIBS = @DIRECTSOUND_LIBS@
+DIRECTX_CFLAGS = @DIRECTX_CFLAGS@
+DIRECTX_LDFLAGS = @DIRECTX_LDFLAGS@
+DLLTOOL = @DLLTOOL@
+DSSIM_CFLAGS = @DSSIM_CFLAGS@
+DSSIM_LIBS = @DSSIM_LIBS@
+DSYMUTIL = @DSYMUTIL@
+DTLS_CFLAGS = @DTLS_CFLAGS@
+DTLS_LIBS = @DTLS_LIBS@
+DTS_LIBS = @DTS_LIBS@
+DUMPBIN = @DUMPBIN@
+DVDNAV_CFLAGS = @DVDNAV_CFLAGS@
+DVDNAV_LIBS = @DVDNAV_LIBS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+ERROR_CFLAGS = @ERROR_CFLAGS@
+ERROR_CXXFLAGS = @ERROR_CXXFLAGS@
+ERROR_OBJCFLAGS = @ERROR_OBJCFLAGS@
+EXEEXT = @EXEEXT@
+EXIF_CFLAGS = @EXIF_CFLAGS@
+EXIF_LIBS = @EXIF_LIBS@
+EXTRA_CFLAGS = @EXTRA_CFLAGS@
+FAAC_LIBS = @FAAC_LIBS@
+FAAD_LIBS = @FAAD_LIBS@
+FDK_AAC_CFLAGS = @FDK_AAC_CFLAGS@
+FDK_AAC_LIBS = @FDK_AAC_LIBS@
+FFLAGS = @FFLAGS@
+FGREP = @FGREP@
+FLITE_CFLAGS = @FLITE_CFLAGS@
+FLITE_LIBS = @FLITE_LIBS@
+FLUIDSYNTH_CFLAGS = @FLUIDSYNTH_CFLAGS@
+FLUIDSYNTH_LIBS = @FLUIDSYNTH_LIBS@
+GCOV = @GCOV@
+GCOV_CFLAGS = @GCOV_CFLAGS@
+GCOV_LIBS = @GCOV_LIBS@
+GDBUS_CODEGEN = @GDBUS_CODEGEN@
+GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
+GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
+GIO_CFLAGS = @GIO_CFLAGS@
+GIO_LDFLAGS = @GIO_LDFLAGS@
+GIO_LIBS = @GIO_LIBS@
+GIO_UNIX_CFLAGS = @GIO_UNIX_CFLAGS@
+GIO_UNIX_LIBS = @GIO_UNIX_LIBS@
+GLIB_CFLAGS = @GLIB_CFLAGS@
+GLIB_EXTRA_CFLAGS = @GLIB_EXTRA_CFLAGS@
+GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
+GLIB_LIBS = @GLIB_LIBS@
+GLIB_MKENUMS = @GLIB_MKENUMS@
+GLIB_PREFIX = @GLIB_PREFIX@
+GLIB_REQ = @GLIB_REQ@
+GME_LIBS = @GME_LIBS@
+GMODULE_NO_EXPORT_CFLAGS = @GMODULE_NO_EXPORT_CFLAGS@
+GMODULE_NO_EXPORT_LIBS = @GMODULE_NO_EXPORT_LIBS@
+GMSGFMT = @GMSGFMT@
+GMSGFMT_015 = @GMSGFMT_015@
+GNUSTL_CFLAGS = @GNUSTL_CFLAGS@
+GNUSTL_LIBS = @GNUSTL_LIBS@
+GREP = @GREP@
+GSM_LIBS = @GSM_LIBS@
+GSTPB_PLUGINS_DIR = @GSTPB_PLUGINS_DIR@
+GSTPB_PREFIX = @GSTPB_PREFIX@
+GST_AGE = @GST_AGE@
+GST_ALLOCATORS_CFLAGS = @GST_ALLOCATORS_CFLAGS@
+GST_ALLOCATORS_LIBS = @GST_ALLOCATORS_LIBS@
+GST_ALL_LDFLAGS = @GST_ALL_LDFLAGS@
+GST_API_VERSION = @GST_API_VERSION@
+GST_AUDIO_CFLAGS = @GST_AUDIO_CFLAGS@
+GST_AUDIO_LIBS = @GST_AUDIO_LIBS@
+GST_BASE_CFLAGS = @GST_BASE_CFLAGS@
+GST_BASE_LIBS = @GST_BASE_LIBS@
+GST_CFLAGS = @GST_CFLAGS@
+GST_CHECK_CFLAGS = @GST_CHECK_CFLAGS@
+GST_CHECK_LIBS = @GST_CHECK_LIBS@
+GST_CONTROLLER_CFLAGS = @GST_CONTROLLER_CFLAGS@
+GST_CONTROLLER_LIBS = @GST_CONTROLLER_LIBS@
+GST_CURRENT = @GST_CURRENT@
+GST_CXXFLAGS = @GST_CXXFLAGS@
+GST_GL_CFLAGS = @GST_GL_CFLAGS@
+GST_GL_LIBS = @GST_GL_LIBS@
+GST_LEVEL_DEFAULT = @GST_LEVEL_DEFAULT@
+GST_LIBS = @GST_LIBS@
+GST_LIBVERSION = @GST_LIBVERSION@
+GST_LIB_LDFLAGS = @GST_LIB_LDFLAGS@
+GST_LICENSE = @GST_LICENSE@
+GST_LT_LDFLAGS = @GST_LT_LDFLAGS@
+GST_NET_CFLAGS = @GST_NET_CFLAGS@
+GST_NET_LIBS = @GST_NET_LIBS@
+GST_OBJCFLAGS = @GST_OBJCFLAGS@
+GST_OPTION_CFLAGS = @GST_OPTION_CFLAGS@
+GST_OPTION_CXXFLAGS = @GST_OPTION_CXXFLAGS@
+GST_OPTION_OBJCFLAGS = @GST_OPTION_OBJCFLAGS@
+GST_PACKAGE_NAME = @GST_PACKAGE_NAME@
+GST_PACKAGE_ORIGIN = @GST_PACKAGE_ORIGIN@
+GST_PBUTILS_CFLAGS = @GST_PBUTILS_CFLAGS@
+GST_PBUTILS_LIBS = @GST_PBUTILS_LIBS@
+GST_PKG_CONFIG_PATH = @GST_PKG_CONFIG_PATH@
+GST_PLUGINS_ALL = @GST_PLUGINS_ALL@
+GST_PLUGINS_BAD_CFLAGS = @GST_PLUGINS_BAD_CFLAGS@
+GST_PLUGINS_BAD_CXXFLAGS = @GST_PLUGINS_BAD_CXXFLAGS@
+GST_PLUGINS_BAD_OBJCFLAGS = @GST_PLUGINS_BAD_OBJCFLAGS@
+GST_PLUGINS_BASE_CFLAGS = @GST_PLUGINS_BASE_CFLAGS@
+GST_PLUGINS_BASE_DIR = @GST_PLUGINS_BASE_DIR@
+GST_PLUGINS_BASE_LIBS = @GST_PLUGINS_BASE_LIBS@
+GST_PLUGINS_DIR = @GST_PLUGINS_DIR@
+GST_PLUGINS_GOOD_CFLAGS = @GST_PLUGINS_GOOD_CFLAGS@
+GST_PLUGINS_GOOD_DIR = @GST_PLUGINS_GOOD_DIR@
+GST_PLUGINS_GOOD_LIBS = @GST_PLUGINS_GOOD_LIBS@
+GST_PLUGINS_LIBAV_CFLAGS = @GST_PLUGINS_LIBAV_CFLAGS@
+GST_PLUGINS_LIBAV_DIR = @GST_PLUGINS_LIBAV_DIR@
+GST_PLUGINS_LIBAV_LIBS = @GST_PLUGINS_LIBAV_LIBS@
+GST_PLUGINS_NONPORTED = @GST_PLUGINS_NONPORTED@
+GST_PLUGINS_SELECTED = @GST_PLUGINS_SELECTED@
+GST_PLUGINS_UGLY_CFLAGS = @GST_PLUGINS_UGLY_CFLAGS@
+GST_PLUGINS_UGLY_DIR = @GST_PLUGINS_UGLY_DIR@
+GST_PLUGINS_UGLY_LIBS = @GST_PLUGINS_UGLY_LIBS@
+GST_PLUGIN_LDFLAGS = @GST_PLUGIN_LDFLAGS@
+GST_PREFIX = @GST_PREFIX@
+GST_REVISION = @GST_REVISION@
+GST_SDP_CFLAGS = @GST_SDP_CFLAGS@
+GST_SDP_LIBS = @GST_SDP_LIBS@
+GST_TOOLS_DIR = @GST_TOOLS_DIR@
+GST_VIDEO_CFLAGS = @GST_VIDEO_CFLAGS@
+GST_VIDEO_LIBS = @GST_VIDEO_LIBS@
+GTK3_CFLAGS = @GTK3_CFLAGS@
+GTK3_LIBS = @GTK3_LIBS@
+GTKDOC_CHECK = @GTKDOC_CHECK@
+GTKDOC_DEPS_CFLAGS = @GTKDOC_DEPS_CFLAGS@
+GTKDOC_DEPS_LIBS = @GTKDOC_DEPS_LIBS@
+GTKDOC_MKPDF = @GTKDOC_MKPDF@
+GTKDOC_REBASE = @GTKDOC_REBASE@
+GTK_BASE_DIR = @GTK_BASE_DIR@
+GTK_CFLAGS = @GTK_CFLAGS@
+GTK_LIBS = @GTK_LIBS@
+GTK_VERSION = @GTK_VERSION@
+G_UDEV_CFLAGS = @G_UDEV_CFLAGS@
+G_UDEV_LIBS = @G_UDEV_LIBS@
+HAVE_CXX = @HAVE_CXX@
+HAVE_DIRECT3D = @HAVE_DIRECT3D@
+HAVE_DIRECTSOUND = @HAVE_DIRECTSOUND@
+HAVE_DTS = @HAVE_DTS@
+HAVE_FAAC = @HAVE_FAAC@
+HAVE_FAAD = @HAVE_FAAD@
+HAVE_FLITE = @HAVE_FLITE@
+HAVE_GSM = @HAVE_GSM@
+HAVE_GTK3 = @HAVE_GTK3@
+HAVE_OPENJPEG = @HAVE_OPENJPEG@
+HAVE_SRTP = @HAVE_SRTP@
+HAVE_WASAPI = @HAVE_WASAPI@
+HAVE_WILDMIDI = @HAVE_WILDMIDI@
+HAVE_WINKS = @HAVE_WINKS@
+HAVE_WINSCREENCAP = @HAVE_WINSCREENCAP@
+HAVE_X11 = @HAVE_X11@
+HTML_DIR = @HTML_DIR@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+INTLLIBS = @INTLLIBS@
+INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
+INTROSPECTION_CFLAGS = @INTROSPECTION_CFLAGS@
+INTROSPECTION_COMPILER = @INTROSPECTION_COMPILER@
+INTROSPECTION_GENERATE = @INTROSPECTION_GENERATE@
+INTROSPECTION_GIRDIR = @INTROSPECTION_GIRDIR@
+INTROSPECTION_INIT = @INTROSPECTION_INIT@
+INTROSPECTION_LIBS = @INTROSPECTION_LIBS@
+INTROSPECTION_MAKEFILE = @INTROSPECTION_MAKEFILE@
+INTROSPECTION_SCANNER = @INTROSPECTION_SCANNER@
+INTROSPECTION_TYPELIBDIR = @INTROSPECTION_TYPELIBDIR@
+KATE_CFLAGS = @KATE_CFLAGS@
+KATE_LIBS = @KATE_LIBS@
+KMS_DRM_CFLAGS = @KMS_DRM_CFLAGS@
+KMS_DRM_LIBS = @KMS_DRM_LIBS@
+LCMS2_CFLAGS = @LCMS2_CFLAGS@
+LCMS2_LIBS = @LCMS2_LIBS@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBDC1394_CFLAGS = @LIBDC1394_CFLAGS@
+LIBDC1394_LIBS = @LIBDC1394_LIBS@
+LIBDE265_CFLAGS = @LIBDE265_CFLAGS@
+LIBDE265_LIBS = @LIBDE265_LIBS@
+LIBDIR = @LIBDIR@
+LIBGCRYPT_CFLAGS = @LIBGCRYPT_CFLAGS@
+LIBGCRYPT_CONFIG = @LIBGCRYPT_CONFIG@
+LIBGCRYPT_LIBS = @LIBGCRYPT_LIBS@
+LIBICONV = @LIBICONV@
+LIBINTL = @LIBINTL@
+LIBM = @LIBM@
+LIBMFX_CFLAGS = @LIBMFX_CFLAGS@
+LIBMFX_LIBS = @LIBMFX_LIBS@
+LIBMMS_CFLAGS = @LIBMMS_CFLAGS@
+LIBMMS_LIBS = @LIBMMS_LIBS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIBUDEV_CFLAGS = @LIBUDEV_CFLAGS@
+LIBUDEV_LIBS = @LIBUDEV_LIBS@
+LIBUSB_CFLAGS = @LIBUSB_CFLAGS@
+LIBUSB_LIBS = @LIBUSB_LIBS@
+LIBVA_DRM_CFLAGS = @LIBVA_DRM_CFLAGS@
+LIBVA_DRM_LIBS = @LIBVA_DRM_LIBS@
+LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
+LIBXML2_LIBS = @LIBXML2_LIBS@
+LILV_CFLAGS = @LILV_CFLAGS@
+LILV_LIBS = @LILV_LIBS@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LOCALEDIR = @LOCALEDIR@
+LRDF_CFLAGS = @LRDF_CFLAGS@
+LRDF_LIBS = @LRDF_LIBS@
+LTLIBICONV = @LTLIBICONV@
+LTLIBINTL = @LTLIBINTL@
+LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MANIFEST_TOOL = @MANIFEST_TOOL@
+MJPEG_CFLAGS = @MJPEG_CFLAGS@
+MJPEG_LIBS = @MJPEG_LIBS@
+MKDIR_P = @MKDIR_P@
+MODPLUG_CFLAGS = @MODPLUG_CFLAGS@
+MODPLUG_LIBS = @MODPLUG_LIBS@
+MPEG2ENC_CFLAGS = @MPEG2ENC_CFLAGS@
+MPEG2ENC_LIBS = @MPEG2ENC_LIBS@
+MPLEX_CFLAGS = @MPLEX_CFLAGS@
+MPLEX_LDFLAGS = @MPLEX_LDFLAGS@
+MPLEX_LIBS = @MPLEX_LIBS@
+MSDK_CFLAGS = @MSDK_CFLAGS@
+MSDK_LIBS = @MSDK_LIBS@
+MSGFMT = @MSGFMT@
+MSGFMT_015 = @MSGFMT_015@
+MSGMERGE = @MSGMERGE@
+MUSEPACK_LIBS = @MUSEPACK_LIBS@
+NEON_CFLAGS = @NEON_CFLAGS@
+NEON_LIBS = @NEON_LIBS@
+NETTLE_CFLAGS = @NETTLE_CFLAGS@
+NETTLE_LIBS = @NETTLE_LIBS@
+NICE_CFLAGS = @NICE_CFLAGS@
+NICE_LIBS = @NICE_LIBS@
+NM = @NM@
+NMEDIT = @NMEDIT@
+NVENCODE_LIBS = @NVENCODE_LIBS@
+OBJC = @OBJC@
+OBJCDEPMODE = @OBJCDEPMODE@
+OBJCFLAGS = @OBJCFLAGS@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OFA_CFLAGS = @OFA_CFLAGS@
+OFA_LIBS = @OFA_LIBS@
+OPENAL_CFLAGS = @OPENAL_CFLAGS@
+OPENAL_LIBS = @OPENAL_LIBS@
+OPENCV_CFLAGS = @OPENCV_CFLAGS@
+OPENCV_LIBS = @OPENCV_LIBS@
+OPENCV_PREFIX = @OPENCV_PREFIX@
+OPENEXR240_CFLAGS = @OPENEXR240_CFLAGS@
+OPENEXR240_LIBS = @OPENEXR240_LIBS@
+OPENEXR_CFLAGS = @OPENEXR_CFLAGS@
+OPENEXR_LIBS = @OPENEXR_LIBS@
+OPENEXR_STDCFLAGS = @OPENEXR_STDCFLAGS@
+OPENH264_CFLAGS = @OPENH264_CFLAGS@
+OPENH264_LIBS = @OPENH264_LIBS@
+OPENJPEG_CFLAGS = @OPENJPEG_CFLAGS@
+OPENJPEG_LIBS = @OPENJPEG_LIBS@
+OPENMPT_CFLAGS = @OPENMPT_CFLAGS@
+OPENMPT_LIBS = @OPENMPT_LIBS@
+OPENNI2_CFLAGS = @OPENNI2_CFLAGS@
+OPENNI2_LIBS = @OPENNI2_LIBS@
+OPENSSL_CFLAGS = @OPENSSL_CFLAGS@
+OPENSSL_LIBS = @OPENSSL_LIBS@
+OPUS_CFLAGS = @OPUS_CFLAGS@
+OPUS_LIBS = @OPUS_LIBS@
+ORCC = @ORCC@
+ORCC_FLAGS = @ORCC_FLAGS@
+ORC_CFLAGS = @ORC_CFLAGS@
+ORC_LIBS = @ORC_LIBS@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PACKAGE_VERSION_MAJOR = @PACKAGE_VERSION_MAJOR@
+PACKAGE_VERSION_MICRO = @PACKAGE_VERSION_MICRO@
+PACKAGE_VERSION_MINOR = @PACKAGE_VERSION_MINOR@
+PACKAGE_VERSION_NANO = @PACKAGE_VERSION_NANO@
+PACKAGE_VERSION_RELEASE = @PACKAGE_VERSION_RELEASE@
+PANGO_CFLAGS = @PANGO_CFLAGS@
+PANGO_LIBS = @PANGO_LIBS@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+PKG_CONFIG = @PKG_CONFIG@
+PLUGINDIR = @PLUGINDIR@
+POSUB = @POSUB@
+PROFILE_CFLAGS = @PROFILE_CFLAGS@
+PTHREAD_CC = @PTHREAD_CC@
+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
+PTHREAD_LIBS = @PTHREAD_LIBS@
+PYTHON = @PYTHON@
+PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
+PYTHON_PLATFORM = @PYTHON_PLATFORM@
+PYTHON_PREFIX = @PYTHON_PREFIX@
+PYTHON_VERSION = @PYTHON_VERSION@
+RANLIB = @RANLIB@
+RSVG_CFLAGS = @RSVG_CFLAGS@
+RSVG_LIBS = @RSVG_LIBS@
+RTMP_CFLAGS = @RTMP_CFLAGS@
+RTMP_LIBS = @RTMP_LIBS@
+SBC_CFLAGS = @SBC_CFLAGS@
+SBC_LIBS = @SBC_LIBS@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+SHM_LIBS = @SHM_LIBS@
+SNDFILE_CFLAGS = @SNDFILE_CFLAGS@
+SNDFILE_LIBS = @SNDFILE_LIBS@
+SOUNDTOUCH_CFLAGS = @SOUNDTOUCH_CFLAGS@
+SOUNDTOUCH_LIBS = @SOUNDTOUCH_LIBS@
+SPANDSP_CFLAGS = @SPANDSP_CFLAGS@
+SPANDSP_LIBS = @SPANDSP_LIBS@
+SRTP_CFLAGS = @SRTP_CFLAGS@
+SRTP_LIBS = @SRTP_LIBS@
+SRT_CFLAGS = @SRT_CFLAGS@
+SRT_LIBS = @SRT_LIBS@
+SSH2_CFLAGS = @SSH2_CFLAGS@
+SSH2_LIBS = @SSH2_LIBS@
+STRIP = @STRIP@
+TELETEXTDEC_CFLAGS = @TELETEXTDEC_CFLAGS@
+TELETEXTDEC_LIBS = @TELETEXTDEC_LIBS@
+TIGER_CFLAGS = @TIGER_CFLAGS@
+TIGER_LIBS = @TIGER_LIBS@
+TTML_CFLAGS = @TTML_CFLAGS@
+TTML_LIBS = @TTML_LIBS@
+USE_NLS = @USE_NLS@
+USRSCTP_LIBS = @USRSCTP_LIBS@
+VALGRIND_CFLAGS = @VALGRIND_CFLAGS@
+VALGRIND_LIBS = @VALGRIND_LIBS@
+VALGRIND_PATH = @VALGRIND_PATH@
+VDPAU_CFLAGS = @VDPAU_CFLAGS@
+VDPAU_LIBS = @VDPAU_LIBS@
+VERSION = @VERSION@
+VISIBILITY_CFLAGS = @VISIBILITY_CFLAGS@
+VISIBILITY_CXXFLAGS = @VISIBILITY_CXXFLAGS@
+VOAACENC_CFLAGS = @VOAACENC_CFLAGS@
+VOAACENC_LIBS = @VOAACENC_LIBS@
+VOAMRWBENC_CFLAGS = @VOAMRWBENC_CFLAGS@
+VOAMRWBENC_LIBS = @VOAMRWBENC_LIBS@
+VULKAN_LIBS = @VULKAN_LIBS@
+VULKAN_WAYLAND_CFLAGS = @VULKAN_WAYLAND_CFLAGS@
+VULKAN_WAYLAND_LIBS = @VULKAN_WAYLAND_LIBS@
+WARNING_CFLAGS = @WARNING_CFLAGS@
+WARNING_CXXFLAGS = @WARNING_CXXFLAGS@
+WARNING_OBJCFLAGS = @WARNING_OBJCFLAGS@
+WASAPI_LIBS = @WASAPI_LIBS@
+WAYLAND_CFLAGS = @WAYLAND_CFLAGS@
+WAYLAND_LIBS = @WAYLAND_LIBS@
+WAYLAND_PROTOCOLS_DATADIR = @WAYLAND_PROTOCOLS_DATADIR@
+WEBP_CFLAGS = @WEBP_CFLAGS@
+WEBP_LIBS = @WEBP_LIBS@
+WEBRTCDSP_CFLAGS = @WEBRTCDSP_CFLAGS@
+WEBRTCDSP_LIBS = @WEBRTCDSP_LIBS@
+WGET = @WGET@
+WILDMIDI_CFLAGS = @WILDMIDI_CFLAGS@
+WILDMIDI_LIBS = @WILDMIDI_LIBS@
+WINKS_LIBS = @WINKS_LIBS@
+WINSCREENCAP_LIBS = @WINSCREENCAP_LIBS@
+WINSOCK2_LIBS = @WINSOCK2_LIBS@
+WPE_CFLAGS = @WPE_CFLAGS@
+WPE_LIBS = @WPE_LIBS@
+X11_CFLAGS = @X11_CFLAGS@
+X11_LIBS = @X11_LIBS@
+X265_CFLAGS = @X265_CFLAGS@
+X265_LIBS = @X265_LIBS@
+XCB_CFLAGS = @XCB_CFLAGS@
+XCB_LIBS = @XCB_LIBS@
+XGETTEXT = @XGETTEXT@
+XGETTEXT_015 = @XGETTEXT_015@
+XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
+ZBAR_CFLAGS = @ZBAR_CFLAGS@
+ZBAR_LIBS = @ZBAR_LIBS@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_AR = @ac_ct_AR@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_CXX = @ac_ct_CXX@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+ac_ct_OBJC = @ac_ct_OBJC@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+ax_pthread_config = @ax_pthread_config@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+pkgpyexecdir = @pkgpyexecdir@
+pkgpythondir = @pkgpythondir@
+plugindir = @plugindir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+pyexecdir = @pyexecdir@
+pythondir = @pythondir@
+runstatedir = @runstatedir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target = @target@
+target_alias = @target_alias@
+target_cpu = @target_cpu@
+target_os = @target_os@
+target_vendor = @target_vendor@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+wayland_scanner = @wayland_scanner@
+plugin_LTLIBRARIES = libgstnufbdevsink.la
+libgstnufbdevsink_la_SOURCES = gstnufbdevsink.c
+libgstnufbdevsink_la_CFLAGS = \
+	$(GST_PLUGINS_BASE_CFLAGS) \
+	$(GST_CFLAGS) \
+	$(LIBNUFBDEV_CFLAGS)
+
+libgstnufbdevsink_la_LIBADD = \
+	$(GST_PLUGINS_BASE_LIBS) -lgstvideo-$(GST_API_VERSION) \
+	$(GST_BASE_LIBS) \
+	$(LIBNUFBDEV_LIBS)
+
+libgstnufbdevsink_la_LDFLAGS = $(GST_PLUGIN_LDFLAGS)
+noinst_HEADERS = gstnufbdevsink.h
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu sys/nufbdev/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu sys/nufbdev/Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+
+install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
+	list2=; for p in $$list; do \
+	  if test -f $$p; then \
+	    list2="$$list2 $$p"; \
+	  else :; fi; \
+	done; \
+	test -z "$$list2" || { \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(plugindir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(plugindir)" || exit 1; \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(plugindir)'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(plugindir)"; \
+	}
+
+uninstall-pluginLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$f'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(plugindir)/$$f"; \
+	done
+
+clean-pluginLTLIBRARIES:
+	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)
+	@list='$(plugin_LTLIBRARIES)'; \
+	locs=`for p in $$list; do echo $$p; done | \
+	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
+	      sort -u`; \
+	test -z "$$locs" || { \
+	  echo rm -f $${locs}; \
+	  rm -f $${locs}; \
+	}
+
+libgstnufbdevsink.la: $(libgstnufbdevsink_la_OBJECTS) $(libgstnufbdevsink_la_DEPENDENCIES) $(EXTRA_libgstnufbdevsink_la_DEPENDENCIES) 
+	$(AM_V_CCLD)$(libgstnufbdevsink_la_LINK) -rpath $(plugindir) $(libgstnufbdevsink_la_OBJECTS) $(libgstnufbdevsink_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgstnufbdevsink_la-gstnufbdevsink.Plo@am__quote@ # am--include-marker
+
+$(am__depfiles_remade):
+	@$(MKDIR_P) $(@D)
+	@echo '# dummy' >$@-t && $(am__mv) $@-t $@
+
+am--depfiles: $(am__depfiles_remade)
+
+.c.o:
+@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
+@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
+@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<
+
+libgstnufbdevsink_la-gstnufbdevsink.lo: gstnufbdevsink.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgstnufbdevsink_la_CFLAGS) $(CFLAGS) -MT libgstnufbdevsink_la-gstnufbdevsink.lo -MD -MP -MF $(DEPDIR)/libgstnufbdevsink_la-gstnufbdevsink.Tpo -c -o libgstnufbdevsink_la-gstnufbdevsink.lo `test -f 'gstnufbdevsink.c' || echo '$(srcdir)/'`gstnufbdevsink.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libgstnufbdevsink_la-gstnufbdevsink.Tpo $(DEPDIR)/libgstnufbdevsink_la-gstnufbdevsink.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gstnufbdevsink.c' object='libgstnufbdevsink_la-gstnufbdevsink.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgstnufbdevsink_la_CFLAGS) $(CFLAGS) -c -o libgstnufbdevsink_la-gstnufbdevsink.lo `test -f 'gstnufbdevsink.c' || echo '$(srcdir)/'`gstnufbdevsink.c
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(am__tagged_files)
+	$(am__define_uniq_tagged_files); mkid -fID $$unique
+tags: tags-am
+TAGS: tags
+
+tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
+	set x; \
+	here=`pwd`; \
+	$(am__define_uniq_tagged_files); \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: ctags-am
+
+CTAGS: ctags
+ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
+	$(am__define_uniq_tagged_files); \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+cscopelist: cscopelist-am
+
+cscopelist-am: $(am__tagged_files)
+	list='$(am__tagged_files)'; \
+	case "$(srcdir)" in \
+	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
+	  *) sdir=$(subdir)/$(srcdir) ;; \
+	esac; \
+	for i in $$list; do \
+	  if test -f "$$i"; then \
+	    echo "$(subdir)/$$i"; \
+	  else \
+	    echo "$$sdir/$$i"; \
+	  fi; \
+	done >> $(top_builddir)/cscope.files
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) distdir-am
+
+distdir-am: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES) $(HEADERS)
+installdirs:
+	for dir in "$(DESTDIR)$(plugindir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	if test -z '$(STRIP)'; then \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	      install; \
+	else \
+	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
+	fi
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libtool clean-pluginLTLIBRARIES \
+	mostlyclean-am
+
+distclean: distclean-am
+		-rm -f ./$(DEPDIR)/libgstnufbdevsink_la-gstnufbdevsink.Plo
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am: install-pluginLTLIBRARIES
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am:
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+		-rm -f ./$(DEPDIR)/libgstnufbdevsink_la-gstnufbdevsink.Plo
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-pluginLTLIBRARIES
+
+.MAKE: install-am install-strip
+
+.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
+	clean-generic clean-libtool clean-pluginLTLIBRARIES \
+	cscopelist-am ctags ctags-am distclean distclean-compile \
+	distclean-generic distclean-libtool distclean-tags distdir dvi \
+	dvi-am html html-am info info-am install install-am \
+	install-data install-data-am install-dvi install-dvi-am \
+	install-exec install-exec-am install-html install-html-am \
+	install-info install-info-am install-man install-pdf \
+	install-pdf-am install-pluginLTLIBRARIES install-ps \
+	install-ps-am install-strip installcheck installcheck-am \
+	installdirs maintainer-clean maintainer-clean-generic \
+	mostlyclean mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
+	uninstall-am uninstall-pluginLTLIBRARIES
+
+.PRECIOUS: Makefile
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff --git a/sys/nufbdev/gstnufbdevsink.c b/sys/nufbdev/gstnufbdevsink.c
new file mode 100644
index 0000000..9ae345d
--- /dev/null
+++ b/sys/nufbdev/gstnufbdevsink.c
@@ -0,0 +1,608 @@
+/* GStreamer nufbdev plugin
+ * Copyright (C) 2007 Sean D'Epagnier <sean@depagnier.com>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+ */
+
+/* currently the driver does not switch modes, instead uses current mode.
+   the video is centered and cropped if needed to fit onscreen.
+   Whatever bitdepth is set is used, and tested to work for 16, 24, 32 bits
+*/
+
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#endif
+
+#include <stdio.h>
+#include <signal.h>
+#include <string.h>
+#include <sys/time.h>
+#include <stdlib.h>
+
+#include <fcntl.h>
+#include <sys/ioctl.h>
+#include <sys/mman.h>
+
+#ifdef HAVE_UNISTD_H
+#include <unistd.h>
+#endif
+
+#ifdef HAVE_STDINT_H
+#include <stdint.h>
+#endif
+
+#include <gst/gst.h>
+#include "gstnufbdevsink.h"
+
+#include <linux/videodev2.h>
+
+#define ENABLE_LOCAL_DEBUG
+
+#ifdef ENABLE_LOCAL_DEBUG
+#define debug_msg     printf
+#else
+#define debug_msg(...)
+#endif
+
+enum
+{
+  ARG_0,
+  ARG_DEVICE
+};
+
+
+typedef struct _GstCapsArrayElement
+{
+  GstStructure *structure;
+  GstCapsFeatures *features;
+} GstCapsArrayElement;
+
+typedef struct _GstCapsImpl
+{
+  GstCaps caps;
+
+  GArray *array;
+} GstCapsImpl;
+
+#define GST_CAPS_ARRAY(c) (((GstCapsImpl *)(c))->array)
+
+#define GST_CAPS_LEN(c)   (GST_CAPS_ARRAY(c)->len)
+
+
+
+
+#if 0
+static void gst_nufbdevsink_get_times (GstBaseSink * basesink,
+    GstBuffer * buffer, GstClockTime * start, GstClockTime * end);
+#endif
+
+
+
+static GstFlowReturn gst_nufbdevsink_show_frame (GstVideoSink * videosink,
+    GstBuffer * buff);
+
+static gboolean gst_nufbdevsink_start (GstBaseSink * bsink);
+static gboolean gst_nufbdevsink_stop (GstBaseSink * bsink);
+
+static GstCaps *gst_nufbdevsink_getcaps (GstBaseSink * bsink, GstCaps * filter);
+static gboolean gst_nufbdevsink_setcaps (GstBaseSink * bsink, GstCaps * caps);
+
+static void gst_nufbdevsink_finalize (GObject * object);
+static void gst_nufbdevsink_set_property (GObject * object,
+    guint prop_id, const GValue * value, GParamSpec * pspec);
+static void gst_nufbdevsink_get_property (GObject * object,
+    guint prop_id, GValue * value, GParamSpec * pspec);
+static GstStateChangeReturn gst_nufbdevsink_change_state (GstElement * element,
+    GstStateChange transition);
+
+#define VIDEO_CAPS "{ I420, NV12, RGB, BGR, BGRx, xBGR, RGB, RGBx, ARGB, RGB16 }"
+
+static GstStaticPadTemplate sink_template = GST_STATIC_PAD_TEMPLATE ("sink",
+    GST_PAD_SINK,
+    GST_PAD_ALWAYS,
+    GST_STATIC_CAPS (GST_VIDEO_CAPS_MAKE (VIDEO_CAPS))
+    );
+
+#define parent_class gst_nufbdevsink_parent_class
+G_DEFINE_TYPE (GstNUFBDEVSink, gst_nufbdevsink, GST_TYPE_VIDEO_SINK);
+
+static void
+gst_nufbdevsink_init (GstNUFBDEVSink * nufbdevsink)
+{
+  struct vc8k_pp_params  *pp;
+  char  dev_name[32];
+  int   i;
+
+  debug_msg("%s\n", __func__);
+
+  if (!nufbdevsink->device) {
+    nufbdevsink->device = g_strdup ("/dev/fb0");
+  }
+  nufbdevsink->fd = open (nufbdevsink->device, O_RDWR);
+
+  if (nufbdevsink->fd == -1)
+    return;
+
+  /* get the fixed screen info */
+  if (ioctl (nufbdevsink->fd, FBIOGET_FSCREENINFO, &nufbdevsink->fixinfo))
+    goto err_out;
+
+  /* get the variable screen info */
+  if (ioctl (nufbdevsink->fd, FBIOGET_VSCREENINFO, &nufbdevsink->varinfo))
+    goto err_out;
+
+  /* map the framebuffer */
+  nufbdevsink->framebuffer = mmap (0, nufbdevsink->fixinfo.smem_len,
+      PROT_WRITE, MAP_SHARED, nufbdevsink->fd, 0);
+  if (nufbdevsink->framebuffer == MAP_FAILED)
+    goto err_out;
+    
+  nufbdevsink->format = GST_VIDEO_FORMAT_ARGB;   /* hard fix to ARGB */
+
+  ioctl(nufbdevsink->fd, FBIOPAN_DISPLAY, &nufbdevsink->varinfo);
+
+  /*-----------------------------------------------*/
+  /*  VC8000 PP control                            */
+  /*-----------------------------------------------*/
+  pp = &nufbdevsink->pp;
+  pp->enable_pp = 1;
+  pp->frame_buf_w = nufbdevsink->varinfo.xres;
+  pp->frame_buf_h = nufbdevsink->varinfo.yres;
+  pp->img_out_x = 0;
+  pp->img_out_y = 0;
+  pp->img_out_w = nufbdevsink->varinfo.xres;
+  pp->img_out_h = nufbdevsink->varinfo.yres;
+  pp->rotation = PP_ROTATION_NONE;
+  
+  if (nufbdevsink->format == GST_VIDEO_FORMAT_ARGB)
+    pp->img_out_fmt = V4L2_PIX_FMT_ARGB32;
+  else if (nufbdevsink->format == GST_VIDEO_FORMAT_RGB16)
+    pp->img_out_fmt = V4L2_PIX_FMT_RGB565;
+  else
+    pp->img_out_fmt = V4L2_PIX_FMT_NV12;
+  
+  for (i = 0; i < 10; i++) {
+    sprintf(dev_name, "/dev/video%d", i);
+    nufbdevsink->fd_vc8k = open(dev_name, O_RDWR);
+    if (nufbdevsink->fd_vc8k == -1)
+      continue;
+    
+    if (ioctl(nufbdevsink->fd_vc8k, VC8KIOC_PP_SET_CONFIG, nufbdevsink->pp) != 0) {
+      debug_msg("VC8KIOC_PP_SET_CONFIG failed (%s)", strerror(errno));
+      continue;
+    }
+    else
+      break;
+  }
+  if (i < 10) {
+    debug_msg("VC8000 %s opened.\n", dev_name);
+    return;
+  }
+
+err_out:
+  close (nufbdevsink->fd);
+  nufbdevsink->fd = -1;
+  debug_msg("gst_nufbdevsink_init failed!\n");
+}
+
+#if 0
+static void
+gst_nufbdevsink_get_times (GstBaseSink * basesink, GstBuffer * buffer,
+    GstClockTime * start, GstClockTime * end)
+{
+  GstNUFBDEVSink *nufbdevsink;
+
+  nufbdevsink = GST_NUFBDEVSINK (basesink);
+
+  if (GST_BUFFER_TIMESTAMP_IS_VALID (buffer)) {
+    *start = GST_BUFFER_TIMESTAMP (buffer);
+    if (GST_BUFFER_DURATION_IS_VALID (buffer)) {
+      *end = *start + GST_BUFFER_DURATION (buffer);
+    } else {
+      if (nufbdevsink->fps_n > 0) {
+        *end = *start +
+            gst_util_uint64_scale_int (GST_SECOND, nufbdevsink->fps_d,
+            nufbdevsink->fps_n);
+      }
+    }
+  }
+}
+#endif
+
+static GstCaps *
+gst_nufbdevsink_getcaps (GstBaseSink * bsink, GstCaps * filter)
+{
+  GstNUFBDEVSink *nufbdevsink;
+  //GstVideoFormat format;
+  GstCaps *caps;
+  //uint32_t rmask;
+  //uint32_t gmask;
+  //uint32_t bmask;
+  //uint32_t tmask;
+  //int endianness, depth, bpp;
+
+  nufbdevsink = GST_NUFBDEVSINK (bsink);
+
+  caps = gst_static_pad_template_get_caps (&sink_template);
+
+#if 0
+  /* FIXME: locking */
+  if (!nufbdevsink->framebuffer)
+    goto done;
+
+  bpp = nufbdevsink->varinfo.bits_per_pixel;
+
+  rmask = ((1 << nufbdevsink->varinfo.red.length) - 1)
+      << nufbdevsink->varinfo.red.offset;
+  gmask = ((1 << nufbdevsink->varinfo.green.length) - 1)
+      << nufbdevsink->varinfo.green.offset;
+  bmask = ((1 << nufbdevsink->varinfo.blue.length) - 1)
+      << nufbdevsink->varinfo.blue.offset;
+  tmask = ((1 << nufbdevsink->varinfo.transp.length) - 1)
+      << nufbdevsink->varinfo.transp.offset;
+
+  depth = nufbdevsink->varinfo.red.length + nufbdevsink->varinfo.green.length
+      + nufbdevsink->varinfo.blue.length;
+
+  switch (nufbdevsink->varinfo.bits_per_pixel) {
+    case 32:
+      /* swap endianness of masks */
+      rmask = GUINT32_SWAP_LE_BE (rmask);
+      gmask = GUINT32_SWAP_LE_BE (gmask);
+      bmask = GUINT32_SWAP_LE_BE (bmask);
+      tmask = GUINT32_SWAP_LE_BE (tmask);
+      depth += nufbdevsink->varinfo.transp.length;
+      endianness = G_BIG_ENDIAN;
+      break;
+    case 24:{
+      /* swap red and blue masks */
+      tmask = rmask;
+      rmask = bmask;
+      bmask = tmask;
+      tmask = 0;
+      endianness = G_BIG_ENDIAN;
+      break;
+    }
+    case 15:
+    case 16:
+      tmask = 0;
+      endianness = G_LITTLE_ENDIAN;
+      break;
+    default:
+      goto unsupported_bpp;
+  }
+
+  format = gst_video_format_from_masks (depth, bpp, endianness, rmask, gmask,
+      bmask, tmask);
+
+  debug_msg("%s, %d, format = %s\n", __func__, __LINE__, gst_video_format_to_string(format));
+
+  if (format == GST_VIDEO_FORMAT_UNKNOWN)
+    goto unknown_format;
+
+  caps = gst_caps_make_writable (caps);
+  gst_caps_set_simple (caps, "format", G_TYPE_STRING,
+      gst_video_format_to_string (format), NULL);
+#else
+  caps = gst_caps_make_writable (caps);
+#endif
+
+  debug_msg("%s, nufbdevsink caps [%s]\n", __func__, gst_caps_to_string(caps));
+
+done:
+
+  if (filter != NULL) {
+    GstCaps *icaps;
+
+    // debug_msg("%s %d, filter [%s], len = %d\n", __func__, __LINE__, gst_caps_to_string(filter), GST_CAPS_LEN(filter));
+    // icaps = gst_caps_intersect (caps, filter);
+    icaps = gst_caps_copy(filter);
+    
+    gst_caps_unref (caps);
+    caps = icaps;
+  }
+
+  if (caps)
+        debug_msg("%s, return caps name: %s\n", __func__, gst_caps_to_string(caps));
+  else
+        debug_msg("%s, return caps is NULL!!\n", __func__);
+
+  return caps;
+
+#if 0
+/* ERRORS */
+unsupported_bpp:
+  {
+    GST_WARNING_OBJECT (bsink, "unsupported bit depth: %d", bpp);
+    return NULL;
+  }
+unknown_format:
+  {
+    GST_WARNING_OBJECT (bsink, "could not map nufbdev format to GstVideoFormat: "
+        "depth=%u, bpp=%u, endianness=%u, rmask=0x%08x, gmask=0x%08x, "
+        "bmask=0x%08x, tmask=0x%08x", depth, bpp, endianness, rmask, gmask,
+        bmask, tmask);
+    return NULL;
+  }
+#endif  
+}
+
+static gboolean
+gst_nufbdevsink_setcaps (GstBaseSink * bsink, GstCaps * vscapslist)
+{
+#if 0	
+  GstNUFBDEVSink *nufbdevsink;
+  GstStructure *structure;
+  const GValue *fps;
+
+  nufbdevsink = GST_NUFBDEVSINK (bsink);
+
+  structure = gst_caps_get_structure (vscapslist, 0);
+
+  fps = gst_structure_get_value (structure, "framerate");
+  nufbdevsink->fps_n = gst_value_get_fraction_numerator (fps);
+  nufbdevsink->fps_d = gst_value_get_fraction_denominator (fps);
+
+  gst_structure_get_int (structure, "width", &nufbdevsink->width);
+  gst_structure_get_int (structure, "height", &nufbdevsink->height);
+
+  /* calculate centering and scanlengths for the video */
+  nufbdevsink->bytespp =
+      nufbdevsink->fixinfo.line_length / nufbdevsink->varinfo.xres_virtual;
+
+  nufbdevsink->cx = ((int) nufbdevsink->varinfo.xres - nufbdevsink->width) / 2;
+  if (nufbdevsink->cx < 0)
+    nufbdevsink->cx = 0;
+
+  nufbdevsink->cy = ((int) nufbdevsink->varinfo.yres - nufbdevsink->height) / 2;
+  if (nufbdevsink->cy < 0)
+    nufbdevsink->cy = 0;
+
+  nufbdevsink->linelen = nufbdevsink->width * nufbdevsink->bytespp;
+  if (nufbdevsink->linelen > nufbdevsink->fixinfo.line_length)
+    nufbdevsink->linelen = nufbdevsink->fixinfo.line_length;
+
+  nufbdevsink->lines = nufbdevsink->height;
+  if (nufbdevsink->lines > nufbdevsink->varinfo.yres)
+    nufbdevsink->lines = nufbdevsink->varinfo.yres;
+#endif
+  return TRUE;
+}
+
+
+static GstFlowReturn
+gst_nufbdevsink_show_frame (GstVideoSink * videosink, GstBuffer * buf)
+{
+#if 0
+  GstNUFBDEVSink *nufbdevsink;
+  GstMapInfo map;
+  int i;
+
+
+  nufbdevsink = GST_NUFBDEVSINK (videosink);
+
+  /* optimization could remove this memcpy by allocating the buffer
+     in framebuffer memory, but would only work when xres matches
+     the video width */
+  if (!gst_buffer_map (buf, &map, GST_MAP_READ))
+    return GST_FLOW_ERROR;
+
+  for (i = 0; i < nufbdevsink->lines; i++) {
+    memcpy (nufbdevsink->framebuffer
+        + (i + nufbdevsink->cy) * nufbdevsink->fixinfo.line_length
+        + nufbdevsink->cx * nufbdevsink->bytespp,
+        map.data + i * nufbdevsink->width * nufbdevsink->bytespp,
+        nufbdevsink->linelen);
+  }
+
+  gst_buffer_unmap (buf, &map);
+#endif
+  return GST_FLOW_OK;
+}
+
+static gboolean
+gst_nufbdevsink_start (GstBaseSink * bsink)
+{
+#if 0
+  GstNUFBDEVSink *nufbdevsink;
+  struct vc8k_pp_params  *pp;
+  char  dev_name[32];
+  int   i;
+
+  nufbdevsink = GST_NUFBDEVSINK (bsink);
+
+  debug_msg("%s\n", __func__);
+  if (!nufbdevsink->device) {
+    nufbdevsink->device = g_strdup ("/dev/fb0");
+  }
+
+  nufbdevsink->fd = open (nufbdevsink->device, O_RDWR);
+
+  if (nufbdevsink->fd == -1)
+    return FALSE;
+
+  /* get the fixed screen info */
+  if (ioctl (nufbdevsink->fd, FBIOGET_FSCREENINFO, &nufbdevsink->fixinfo))
+    return FALSE;
+
+  /* get the variable screen info */
+  if (ioctl (nufbdevsink->fd, FBIOGET_VSCREENINFO, &nufbdevsink->varinfo))
+    return FALSE;
+    
+  nufbdevsink->format = GST_VIDEO_FORMAT_ARGB;   /* hard fix to ARGB */
+
+  /* map the framebuffer */
+  nufbdevsink->framebuffer = mmap (0, nufbdevsink->fixinfo.smem_len,
+      PROT_WRITE, MAP_SHARED, nufbdevsink->fd, 0);
+  if (nufbdevsink->framebuffer == MAP_FAILED)
+    return FALSE;
+#endif
+
+  return TRUE;
+}
+
+static gboolean
+gst_nufbdevsink_stop (GstBaseSink * bsink)
+{
+#if 0
+  GstNUFBDEVSink *nufbdevsink;
+
+  nufbdevsink = GST_NUFBDEVSINK (bsink);
+
+  if (munmap (nufbdevsink->framebuffer, nufbdevsink->fixinfo.smem_len))
+    return FALSE;
+
+  if (close (nufbdevsink->fd))
+    return FALSE;
+
+  nufbdevsink->pp.enable_pp = 0;
+  ioctl(nufbdevsink->fd_vc8k, VC8KIOC_PP_SET_CONFIG, nufbdevsink->pp);
+  close(nufbdevsink->fd_vc8k);
+#endif
+
+  return TRUE;
+}
+
+static void
+gst_nufbdevsink_set_property (GObject * object, guint prop_id,
+    const GValue * value, GParamSpec * pspec)
+{
+  GstNUFBDEVSink *nufbdevsink;
+
+  nufbdevsink = GST_NUFBDEVSINK (object);
+
+  switch (prop_id) {
+    case ARG_DEVICE:{
+      g_free (nufbdevsink->device);
+      nufbdevsink->device = g_value_dup_string (value);
+      break;
+    }
+    default:
+      G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
+      break;
+  }
+}
+
+
+static void
+gst_nufbdevsink_get_property (GObject * object, guint prop_id, GValue * value,
+    GParamSpec * pspec)
+{
+  GstNUFBDEVSink *nufbdevsink;
+
+  nufbdevsink = GST_NUFBDEVSINK (object);
+
+  switch (prop_id) {
+    case ARG_DEVICE:{
+      g_value_set_string (value, nufbdevsink->device);
+      break;
+    }
+    default:
+      G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
+      break;
+  }
+}
+
+static GstStateChangeReturn
+gst_nufbdevsink_change_state (GstElement * element, GstStateChange transition)
+{
+  GstStateChangeReturn ret = GST_STATE_CHANGE_SUCCESS;
+
+  g_return_val_if_fail (GST_IS_NUFBDEVSINK (element), GST_STATE_CHANGE_FAILURE);
+
+  ret = GST_ELEMENT_CLASS (parent_class)->change_state (element, transition);
+
+  switch (transition) {
+    default:
+      break;
+  }
+  return ret;
+}
+
+static gboolean
+plugin_init (GstPlugin * plugin)
+{
+  if (!gst_element_register (plugin, "nufbdevsink", GST_RANK_NONE,
+          GST_TYPE_NUFBDEVSINK))
+    return FALSE;
+
+  return TRUE;
+}
+
+static void
+gst_nufbdevsink_class_init (GstNUFBDEVSinkClass * klass)
+{
+  GObjectClass *gobject_class;
+  GstElementClass *gstelement_class;
+  GstBaseSinkClass *basesink_class;
+  GstVideoSinkClass *videosink_class;
+
+  gobject_class = (GObjectClass *) klass;
+  gstelement_class = (GstElementClass *) klass;
+  basesink_class = (GstBaseSinkClass *) klass;
+  videosink_class = (GstVideoSinkClass *) klass;
+
+  gobject_class->set_property = gst_nufbdevsink_set_property;
+  gobject_class->get_property = gst_nufbdevsink_get_property;
+  gobject_class->finalize = gst_nufbdevsink_finalize;
+
+  gstelement_class->change_state =
+      GST_DEBUG_FUNCPTR (gst_nufbdevsink_change_state);
+
+  g_object_class_install_property (G_OBJECT_CLASS (klass), ARG_DEVICE,
+      g_param_spec_string ("device", "device",
+          "The framebuffer device eg: /dev/fb0", NULL, G_PARAM_READWRITE));
+
+  basesink_class->set_caps = GST_DEBUG_FUNCPTR (gst_nufbdevsink_setcaps);
+  basesink_class->get_caps = GST_DEBUG_FUNCPTR (gst_nufbdevsink_getcaps);
+#if 0
+  basesink_class->get_times = GST_DEBUG_FUNCPTR (gst_nufbdevsink_get_times);
+#endif
+  basesink_class->start = GST_DEBUG_FUNCPTR (gst_nufbdevsink_start);
+  basesink_class->stop = GST_DEBUG_FUNCPTR (gst_nufbdevsink_stop);
+
+  videosink_class->show_frame = GST_DEBUG_FUNCPTR (gst_nufbdevsink_show_frame);
+
+  gst_element_class_set_static_metadata (gstelement_class, "nufbdev video sink",
+      "Sink/Video", "Linux framebuffer videosink",
+      "Sean D'Epagnier <sean@depagnier.com>");
+
+  gst_element_class_add_static_pad_template (gstelement_class, &sink_template);
+}
+
+static void
+gst_nufbdevsink_finalize (GObject * object)
+{
+  GstNUFBDEVSink *nufbdevsink = GST_NUFBDEVSINK (object);
+
+#if 1
+  munmap (nufbdevsink->framebuffer, nufbdevsink->fixinfo.smem_len);
+  close (nufbdevsink->fd);
+  nufbdevsink->pp.enable_pp = 0;
+  ioctl(nufbdevsink->fd_vc8k, VC8KIOC_PP_SET_CONFIG, nufbdevsink->pp);
+  close(nufbdevsink->fd_vc8k);
+#endif
+
+  g_free (nufbdevsink->device);
+
+  G_OBJECT_CLASS (parent_class)->finalize (object);
+}
+
+GST_PLUGIN_DEFINE (GST_VERSION_MAJOR,
+    GST_VERSION_MINOR,
+    nufbdevsink,
+    "Linux framebuffer video sink",
+    plugin_init, VERSION, GST_LICENSE, GST_PACKAGE_NAME, GST_PACKAGE_ORIGIN)
diff --git a/sys/nufbdev/gstnufbdevsink.h b/sys/nufbdev/gstnufbdevsink.h
new file mode 100644
index 0000000..3c487d2
--- /dev/null
+++ b/sys/nufbdev/gstnufbdevsink.h
@@ -0,0 +1,106 @@
+/* GStreamer
+ * Copyright (C) 2007 Sean D'Epagnier sean@depagnier.com
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Library General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Library General Public License for more details.
+ *
+ * You should have received a copy of the GNU Library General Public
+ * License along with this library; if not, write to the
+ * Free Software Foundation, Inc., 51 Franklin St, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
+ */
+
+
+#ifndef __GST_NUFBDEVSINK_H__
+#define __GST_NUFBDEVSINK_H__
+
+#include <gst/gst.h>
+#include <gst/video/gstvideosink.h>
+#include <gst/video/video.h>
+
+#include <linux/fb.h>
+
+/*
+ *  V4L2 device default ioctl for VC8K
+ */
+struct vc8k_pp_params {
+	int   enable_pp;
+	void  *frame_buf_vaddr;          /* virtual address of frame buffer           */
+	int   frame_buff_size;
+	int   frame_buf_w;               /* width of frame buffer width               */
+	int   frame_buf_h;               /* height of frame buffer                    */
+	int   img_out_x;                 /* image original point(x,y) on frame buffer */
+	int   img_out_y;                 /* image original point(x,y) on frame buffer */
+	int   img_out_w;                 /* image output width on frame buffer        */
+	int   img_out_h;                 /* image output height on frame buffer       */
+	int   img_out_fmt;               /* image output format                       */
+	int   rotation;
+};
+
+#define VC8KIOC_PP_SET_CONFIG	_IOW ('v', 91, struct vc8k_pp_params)
+#define VC8KIOC_PP_GET_CONFIG	_IOW ('v', 92, struct vc8k_pp_params)
+
+#define PP_ROTATION_NONE                                0U
+#define PP_ROTATION_RIGHT_90                            1U
+#define PP_ROTATION_LEFT_90                             2U
+#define PP_ROTATION_HOR_FLIP                            3U
+#define PP_ROTATION_VER_FLIP                            4U
+#define PP_ROTATION_180                                 5U
+
+
+G_BEGIN_DECLS
+
+#define GST_TYPE_NUFBDEVSINK \
+  (gst_nufbdevsink_get_type())
+#define GST_NUFBDEVSINK(obj) \
+  (G_TYPE_CHECK_INSTANCE_CAST((obj),GST_TYPE_NUFBDEVSINK,GstNUFBDEVSink))
+#define GST_NUFBDEVSINK_CLASS(klass) \
+  (G_TYPE_CHECK_CLASS_CAST((klass),GST_TYPE_NUFBDEVSINK,GstNUFBDEVSinkClass))
+#define GST_IS_NUFBDEVSINK(obj) \
+  (G_TYPE_CHECK_INSTANCE_TYPE((obj),GST_TYPE_NUFBDEVSINK))
+#define GST_IS_NUFBDEVSINK_CLASS(klass) \
+  (G_TYPE_CHECK_CLASS_TYPE((klass),GST_TYPE_NUFBDEVSINK))
+
+typedef struct _GstNUFBDEVSink GstNUFBDEVSink;
+typedef struct _GstNUFBDEVSinkClass GstNUFBDEVSinkClass;
+
+struct _GstNUFBDEVSink {
+  GstVideoSink videosink;
+
+  /*< private >*/
+  struct fb_fix_screeninfo fixinfo;
+  struct fb_var_screeninfo varinfo;
+
+  int fd;
+  unsigned char *framebuffer;
+
+  char *device;
+
+  GstVideoFormat  format;
+  int width, height;
+  int cx, cy, linelen, lines, bytespp;
+
+  int fps_n, fps_d;
+  
+  int   fd_vc8k;
+  struct vc8k_pp_params  pp;
+};
+
+struct _GstNUFBDEVSinkClass {
+  GstVideoSinkClass videosink_class;
+
+};
+
+GType gst_nufbdevsink_get_type(void);
+
+G_END_DECLS
+
+
+#endif /* __GST_NUFBDEVSINK_H__ */
diff --git a/sys/nufbdev/meson.build b/sys/nufbdev/meson.build
new file mode 100644
index 0000000..20ca11f
--- /dev/null
+++ b/sys/nufbdev/meson.build
@@ -0,0 +1,24 @@
+nufbdevsink_sources = [
+  'gstnufbdevsink.c',
+]
+
+if get_option('nufbdev').disabled()
+  subdir_done()
+endif
+
+have_fb_h = cc.has_header('linux/fb.h')
+if not have_fb_h and get_option('nufbdev').enabled()
+  error('nufbdev plugin enabled but fb.h not found')
+endif
+
+if have_fb_h
+  gstnufbdevsink = library('gstnufbdevsink',
+    nufbdevsink_sources,
+    c_args : gst_plugins_bad_args,
+    include_directories : [configinc],
+    dependencies : [gstbase_dep, gstvideo_dep],
+    install : true,
+    install_dir : plugins_install_dir,
+  )
+  pkgconfig.generate(gstnufbdevsink, install_dir : plugins_pkgconfig_install_dir)
+endif
-- 
2.25.1

